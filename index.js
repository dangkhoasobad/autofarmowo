require('dotenv').config();
const { Client, GatewayIntentBits } = require('discord.js');
const axios = require('axios');

const client = new Client({
    intents: [
        GatewayIntentBits.Guilds,
        GatewayIntentBits.GuildMessages,
        GatewayIntentBits.MessageContent,
    ],
});

let isFarming = false;
let token, farmChannelId, notifyChannelId, webhookUrl;

client.on('ready', () => {
    console.log(`ƒêƒÉng nh·∫≠p th√†nh c√¥ng v·ªõi t√†i kho·∫£n: ${client.user.tag}`);
});

client.on('messageCreate', async (message) => {
    if (message.author.bot) return;

    console.log(`Received message: ${message.content}`);

    if (!message.content.startsWith('!')) return;

    const args = message.content.slice(1).trim().split(/ +/);
    const command = args.shift().toLowerCase();

    // L·ªánh webhook
    if (command === 'webhook') {
        if (args.length < 1) {
            return message.channel.send('C·∫ßn cung c·∫•p URL webhook.');
        }

        webhookUrl = args[0];

        // X√°c th·ª±c webhook
        try {
            await axios.post(webhookUrl, { content: 'Webhook ƒë√£ ƒë∆∞·ª£c x√°c th·ª±c th√†nh c√¥ng!' });
            message.channel.send('Webhook ƒë√£ ƒë∆∞·ª£c x√°c th·ª±c th√†nh c√¥ng!');

            // G·ª≠i th√¥ng b√°o v√†o k√™nh th√¥ng b√°o
            await axios.post(`https://discord.com/api/v9/channels/${notifyChannelId}/messages`, {
                content: 'Webhook x√°c th·ª±c th√†nh c√¥ng!',
            }, {
                headers: { Authorization: token },
            });

            // B·∫Øt ƒë·∫ßu qu√° tr√¨nh farm ngay sau khi x√°c th·ª±c th√†nh c√¥ng
            if (!isFarming) {
                isFarming = true;
                startFarming();
            }

        } catch (error) {
            console.error('L·ªói x√°c th·ª±c webhook:', error);
            message.channel.send('X√°c th·ª±c webhook th·∫•t b·∫°i. Vui l√≤ng ki·ªÉm tra l·∫°i URL.');
        }
    }

    // L·ªánh owogrind
    else if (command === 'owogrind') {
        if (args.length < 3) {
            return message.channel.send('C·∫ßn cung c·∫•p token, channel ID farm v√† channel ID th√¥ng b√°o.');
        }

        token = args[0]; // Token t√†i kho·∫£n c√° nh√¢n
        farmChannelId = args[1]; // Channel ID ƒë·ªÉ farm
        notifyChannelId = args[2]; // Channel ID ƒë·ªÉ g·ª≠i th√¥ng b√°o

        message.channel.send('L·ªánh owogrind ƒë√£ ƒë∆∞·ª£c thi·∫øt l·∫≠p th√†nh c√¥ng!');

        // B·∫Øt ƒë·∫ßu qu√° tr√¨nh farm ngay sau khi thi·∫øt l·∫≠p
        if (!isFarming) {
            isFarming = true;
            startFarming();
        }
    }

    // L·ªánh captcha_done
    else if (command === 'captcha_done') {
        if (!isFarming) return message.channel.send('Ch∆∞a b·∫Øt ƒë·∫ßu qu√° tr√¨nh farm.');
        message.channel.send('Ti·∫øp t·ª•c farm th√∫.');
        isFarming = true; // ƒê·∫£m b·∫£o farm ƒëang ch·∫°y
        startFarming(); // Ti·∫øp t·ª•c farm
    }

    // L·ªánh set_status
    else if (command === 'set_status') {
        isFarming = !isFarming;
        message.channel.send(isFarming ? 'ƒê√£ ti·∫øp t·ª•c qu√° tr√¨nh farm.' : 'ƒê√£ t·∫°m d·ª´ng qu√° tr√¨nh farm.');
    }

    // L·ªánh delete_my_data
    else if (command === 'delete_my_data') {
        // Logic ƒë·ªÉ x√≥a d·ªØ li·ªáu
        token = null;
        farmChannelId = null;
        notifyChannelId = null;
        webhookUrl = null;
        message.channel.send('D·ªØ li·ªáu ƒë√£ ƒë∆∞·ª£c x√≥a.');
    }
});

async function startFarming() {
    console.log('B·∫Øt ƒë·∫ßu qu√° tr√¨nh farm');

    // G·ª≠i "owo pray" song song
    const sendOwopray = async () => {
        while (isFarming) {
            try {
                console.log(`[${new Date().toLocaleTimeString()}] ƒêang g·ª≠i l·ªánh "owo pray"`);
                await axios.post(`https://discord.com/api/v9/channels/${farmChannelId}/messages`, {
                    content: 'owo pray',
                }, {
                    headers: { Authorization: token },
                });

                await new Promise(resolve => setTimeout(resolve, 390000)); // ƒê·ª£i 6 ph√∫t 30 gi√¢y
            } catch (error) {
                console.error('L·ªói khi g·ª≠i l·ªánh "owo pray":', error);
                await new Promise(resolve => setTimeout(resolve, 10000)); // ƒê·ª£i 10 gi√¢y tr∆∞·ªõc khi th·ª≠ l·∫°i
            }
        }
    };

    sendOwopray();

    while (isFarming) {
        try {
            console.log(`[${new Date().toLocaleTimeString()}] ƒêang g·ª≠i l·ªánh "owo hunt"`);
            const huntResponse = await axios.post(`https://discord.com/api/v9/channels/${farmChannelId}/messages`, {
                content: 'owo hunt',
            }, {
                headers: { Authorization: token },
            });

            // Ki·ªÉm tra th√∫ hi·∫øm
            await checkForRarePets(huntResponse.data.content);

            await new Promise(resolve => setTimeout(resolve, 20000)); // ƒê·ª£i 20 gi√¢y

            console.log(`[${new Date().toLocaleTimeString()}] ƒêang g·ª≠i l·ªánh "owo b"`);
            const battleResponse = await axios.post(`https://discord.com/api/v9/channels/${farmChannelId}/messages`, {
                content: 'owo b',
            }, {
                headers: { Authorization: token },
            });

            // Ki·ªÉm tra th√∫ hi·∫øm
            await checkForRarePets(battleResponse.data.content);

            await new Promise(resolve => setTimeout(resolve, 20000)); // ƒê·ª£i 20 gi√¢y

            // Ki·ªÉm tra captcha
            if (huntResponse.data.content.includes('https://owobot.com/captcha')) {
                console.log('Ph√°t hi·ªán captcha! T·∫°m d·ª´ng farm...');
                isFarming = false;

                // G·ª≠i th√¥ng b√°o ƒë·∫øn webhook
                await axios.post(webhookUrl, {
                    content: `@everyone Ph√°t hi·ªán y√™u c·∫ßu captcha! Farm ƒë√£ b·ªã t·∫°m d·ª´ng. Vui l√≤ng ki·ªÉm tra v√† ho√†n th√†nh captcha t·∫°i https://owobot.com/captcha.`,
                });

                // G·ª≠i th√¥ng b√°o ƒë·∫øn k√™nh th√¥ng b√°o
                await axios.post(`https://discord.com/api/v9/channels/${notifyChannelId}/messages`, {
                    content: `@everyone Ph√°t hi·ªán y√™u c·∫ßu captcha! Farm ƒë√£ b·ªã t·∫°m d·ª´ng. Vui l√≤ng ki·ªÉm tra v√† ho√†n th√†nh captcha t·∫°i https://owobot.com/captcha.`,
                    headers: { Authorization: token },
                });

                break; // T·∫°m d·ª´ng farm
            }

        } catch (error) {
            console.error('L·ªói trong qu√° tr√¨nh farm:', error);
            await new Promise(resolve => setTimeout(resolve, 10000)); // ƒê·ª£i 10 gi√¢y tr∆∞·ªõc khi th·ª≠ l·∫°i
        }
    }
}

async function checkForRarePets(messageContent) {
    const rarePets = ['patreon', 'cpatreon', 'gem', 'legendary'];

    for (const pet of rarePets) {
        if (messageContent.includes(pet)) {
            console.log(`[${new Date().toLocaleTimeString()}] Ph√°t hi·ªán th√∫ hi·∫øm: ${pet}`);
            await axios.post(webhookUrl, {
                content: `üéâ Ph√°t hi·ªán th√∫ hi·∫øm: ${pet}!`,
            });
        }
    }
}

client.login(process.env.BOT_TOKEN); // ƒêƒÉng nh·∫≠p b·∫±ng token bot
